spring:
  datasource:
    druid:
      filter:
        slf4j:
          enabled: true
          statement-create-after-log-enabled: false
          statement-close-after-log-enabled: false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false
        initial-size: 5 #初始化连接大小
        min-idle: 5 #最小连接池数量
        max-active: 21 #最大连接池数量
        max-wait: 60000 #获取连接时最大等待时间，单位毫秒
        time-between-eviction-runs-millis: 80000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        min-evictable-idle-time-millis: 300000 #配置一个连接在池中最小生存的时间，单位是毫秒
        pool-prepared-statements: false #是否开启PSCache，PSCache对支持游标的数据库性能提升巨大，oracle建议开启，mysql下建议关闭
        max-pool-prepared-statement-per-connection-size: 20 #开启poolPreparedStatements后生效
        #druid动态配置开始
        validation-query: select 1 from dual #测试连接
        test-while-idle: true  #申请连接的时候检测，建议配置为true，不影响性能，并且保证安全性.申请连接的时候检测空闲时间是否大于timeBetweenEvictionRunsMillis，如果大于timeBetweenEvictionRunsMillis则执行validationQuery检测连接是否有效。
        test-on-borrow: false #获取连接时执行检测，生产环境建议关闭，影响性能
        test-on-return: false #归还连接时执行检测，生产环境建议关闭，影响性能
        # stat：Druid内置提供一个StatFilter,用于统计监控信息。如果需要配置访问页面可以参考，https://github.com/alibaba/druid/wiki/配置_StatViewServlet配置。
        # wall：Druid防御SQL注入攻击的WallFilter就是通过Druid的SQL Parser分析。Druid提供的SQL Parser可以在JDBC层拦截SQL做相应处理，比如说分库分表、审计等。
        # log4j2：这个就是日志记录的功能，可以把sql语句使用log4j2进行日志记录供排查问题。
        filters: stat,log4j2,wall
        connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000 #通过connectProperties属性来打开mergeSql功能；慢SQL记录,https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatFilter中对mergeStatFilter的说明有记录，一共有三种方式配置mergeStatFilter
        use-global-data-source-stat: true #缺省多个DruidDataSource的监控数据是各自独立的，在Druid-0.2.17版本之后，支持配置公用监控数据